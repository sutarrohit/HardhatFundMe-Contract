{
  "address": "0xD18Bd797134fb6d6E066e14469Fe1c050dAf9515",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x6b8d7f7a78b076c13375532e90a31a7e6250facd6a8af289f9fa6ed854aa54e0",
  "receipt": {
    "to": null,
    "from": "0x88A17004a4D99B7095C2C059B3c24ab1B6f49349",
    "contractAddress": "0xD18Bd797134fb6d6E066e14469Fe1c050dAf9515",
    "transactionIndex": 32,
    "gasUsed": "864334",
    "logsBloom": "0x
    "blockHash": "0x864c790314b00b9094b04ff51652dedb37496fa63a5fd36870eb72554cbb1284",
    "transactionHash": "0x6b8d7f7a78b076c13375532e90a31a7e6250facd6a8af289f9fa6ed854aa54e0",
    "logs": [],
    "blockNumber": 11149411,
    "cumulativeGasUsed": "11075957",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 3,
  "solcInputHash": "8ee7311416c6e13f67d220a94602896f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Objective:\\r\\n// 1. Receive ETH from sender\\r\\n// 2. Withdraw ETH to the Owner address\\r\\n// 3. Set minimum ETH limit for sender\\r\\n//-----------------------------------------------------------------------------------\\r\\n\\r\\n//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConvertor.sol\\\";\\r\\n\\r\\ncontract FundMe {\\r\\n    using PriceConvertor for uint256;\\r\\n\\r\\n    address owner;\\r\\n    //Minimun USD send should sent\\r\\n    uint256 constant MinimumUSD = 50;\\r\\n    address[] public Funders;\\r\\n    uint256 max;\\r\\n    mapping(address => uint256) public addressToAmount;\\r\\n\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        require(\\r\\n            msg.value.getConversion(priceFeed) >= MinimumUSD,\\r\\n            \\\"Don't send enough ETH\\\"\\r\\n        ); // 1e18 wei = 1ETH\\r\\n        Funders.push(msg.sender);\\r\\n        addressToAmount[msg.sender] = msg.value;\\r\\n    }\\r\\n\\r\\n    modifier ownerOnly() {\\r\\n        require(msg.sender == owner, \\\"Only owner can access\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function withdraw() public ownerOnly {\\r\\n        for (\\r\\n            uint256 FunderIndex = 0;\\r\\n            FunderIndex < Funders.length;\\r\\n            FunderIndex++\\r\\n        ) {\\r\\n            address funder = Funders[FunderIndex];\\r\\n            addressToAmount[funder] = 0;\\r\\n        }\\r\\n\\r\\n        //Reset Funder Array\\r\\n        Funders = new address[](0);\\r\\n\\r\\n        //Transfer function 2300 gas or Throw error (Revert Transaction)\\r\\n        // payable (msg.sender).transfer(address(this).balance);\\r\\n\\r\\n        //Send function 2300 gas or send bool value(Not Revert Transaction)\\r\\n        // bool sendSuccess = payable (msg.sender).send(address(this).balance);\\r\\n        // require(sendSuccess, \\\"Send Failed\\\")\\r\\n\\r\\n        //Call function we can set gas fee and return bool value & data (Not  Revert Transaction)\\r\\n        (bool callSucess, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(callSucess, \\\"Call Failed\\\");\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x5afb37fefa21fa88f16576f062cd4be087447ccd04751487d1c0f6a528a88f00\",\"license\":\"MIT\"},\"contracts/PriceConvertor.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConvertor {\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversion(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethToUSD = (ethAmount * ethPrice) / 1e18;\\r\\n        return ethToUSD;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x8d166a85052568912c7d8ef50d865e9a0af02060b905a5338b3c6e229e32582f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610f31380380610f318339818101604052810190610032919061011c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610149565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e9826100be565b9050919050565b6100f9816100de565b811461010457600080fd5b50565b600081519050610116816100f0565b92915050565b600060208284031215610132576101316100b9565b5b600061014084828501610107565b91505092915050565b610dd9806101586000396000f3fe60806040526004361061004e5760003560e01c80633c7e7d28146100675780633ccfd60b146100a457806348e2f81b146100bb578063741bef1a146100f8578063b60d4288146101235761005d565b3661005d5761005b61012d565b005b61006561012d565b005b34801561007357600080fd5b5061008e600480360381019061008991906106fb565b61024e565b60405161009b9190610741565b60405180910390f35b3480156100b057600080fd5b506100b9610266565b005b3480156100c757600080fd5b506100e260048036038101906100dd9190610788565b6104b0565b6040516100ef91906107c4565b60405180910390f35b34801561010457600080fd5b5061010d6104ef565b60405161011a919061083e565b60405180910390f35b61012b61012d565b005b6032610164600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461051590919063ffffffff16565b10156101a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019c906108b6565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60036020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102eb90610922565b60405180910390fd5b60005b6001805490508110156103a05760006001828154811061031a57610319610942565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610398906109a0565b9150506102f7565b50600067ffffffffffffffff8111156103bc576103bb6109e9565b5b6040519080825280602002602001820160405280156103ea5781602001602082028036833780820191505090505b50600190805190602001906104009291906105f1565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161042790610a49565b60006040518083038185875af1925050503d8060008114610464576040519150601f19603f3d011682016040523d82523d6000602084013e610469565b606091505b50509050806104ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a490610aaa565b60405180910390fd5b50565b600181815481106104c057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061052183610551565b90506000670de0b6b3a7640000828661053a9190610aca565b6105449190610b53565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561059a57600080fd5b505afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d29190610c11565b5050509150506402540be400816105e99190610c8c565b915050919050565b82805482825590600052602060002090810192821561066a579160200282015b828111156106695782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610611565b5b509050610677919061067b565b5090565b5b8082111561069457600081600090555060010161067c565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106c88261069d565b9050919050565b6106d8816106bd565b81146106e357600080fd5b50565b6000813590506106f5816106cf565b92915050565b60006020828403121561071157610710610698565b5b600061071f848285016106e6565b91505092915050565b6000819050919050565b61073b81610728565b82525050565b60006020820190506107566000830184610732565b92915050565b61076581610728565b811461077057600080fd5b50565b6000813590506107828161075c565b92915050565b60006020828403121561079e5761079d610698565b5b60006107ac84828501610773565b91505092915050565b6107be816106bd565b82525050565b60006020820190506107d960008301846107b5565b92915050565b6000819050919050565b60006108046107ff6107fa8461069d565b6107df565b61069d565b9050919050565b6000610816826107e9565b9050919050565b60006108288261080b565b9050919050565b6108388161081d565b82525050565b6000602082019050610853600083018461082f565b92915050565b600082825260208201905092915050565b7f446f6e27742073656e6420656e6f756768204554480000000000000000000000600082015250565b60006108a0601583610859565b91506108ab8261086a565b602082019050919050565b600060208201905081810360008301526108cf81610893565b9050919050565b7f4f6e6c79206f776e65722063616e206163636573730000000000000000000000600082015250565b600061090c601583610859565b9150610917826108d6565b602082019050919050565b6000602082019050818103600083015261093b816108ff565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ab82610728565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109de576109dd610971565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a33600083610a18565b9150610a3e82610a23565b600082019050919050565b6000610a5482610a26565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610a94600b83610859565b9150610a9f82610a5e565b602082019050919050565b60006020820190508181036000830152610ac381610a87565b9050919050565b6000610ad582610728565b9150610ae083610728565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b1957610b18610971565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b5e82610728565b9150610b6983610728565b925082610b7957610b78610b24565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ba381610b84565b8114610bae57600080fd5b50565b600081519050610bc081610b9a565b92915050565b6000819050919050565b610bd981610bc6565b8114610be457600080fd5b50565b600081519050610bf681610bd0565b92915050565b600081519050610c0b8161075c565b92915050565b600080600080600060a08688031215610c2d57610c2c610698565b5b6000610c3b88828901610bb1565b9550506020610c4c88828901610be7565b9450506040610c5d88828901610bfc565b9350506060610c6e88828901610bfc565b9250506080610c7f88828901610bb1565b9150509295509295909350565b6000610c9782610bc6565b9150610ca283610bc6565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ce157610ce0610971565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d1e57610d1d610971565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d5b57610d5a610971565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d9857610d97610971565b5b82820290509291505056fea26469706673582212201fe6fda0da725eaf26e93a627978d7508515c97bdbd9a922e2038be43fbf149f64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c80633c7e7d28146100675780633ccfd60b146100a457806348e2f81b146100bb578063741bef1a146100f8578063b60d4288146101235761005d565b3661005d5761005b61012d565b005b61006561012d565b005b34801561007357600080fd5b5061008e600480360381019061008991906106fb565b61024e565b60405161009b9190610741565b60405180910390f35b3480156100b057600080fd5b506100b9610266565b005b3480156100c757600080fd5b506100e260048036038101906100dd9190610788565b6104b0565b6040516100ef91906107c4565b60405180910390f35b34801561010457600080fd5b5061010d6104ef565b60405161011a919061083e565b60405180910390f35b61012b61012d565b005b6032610164600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461051590919063ffffffff16565b10156101a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019c906108b6565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60036020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102eb90610922565b60405180910390fd5b60005b6001805490508110156103a05760006001828154811061031a57610319610942565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610398906109a0565b9150506102f7565b50600067ffffffffffffffff8111156103bc576103bb6109e9565b5b6040519080825280602002602001820160405280156103ea5781602001602082028036833780820191505090505b50600190805190602001906104009291906105f1565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161042790610a49565b60006040518083038185875af1925050503d8060008114610464576040519150601f19603f3d011682016040523d82523d6000602084013e610469565b606091505b50509050806104ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a490610aaa565b60405180910390fd5b50565b600181815481106104c057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061052183610551565b90506000670de0b6b3a7640000828661053a9190610aca565b6105449190610b53565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561059a57600080fd5b505afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d29190610c11565b5050509150506402540be400816105e99190610c8c565b915050919050565b82805482825590600052602060002090810192821561066a579160200282015b828111156106695782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610611565b5b509050610677919061067b565b5090565b5b8082111561069457600081600090555060010161067c565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106c88261069d565b9050919050565b6106d8816106bd565b81146106e357600080fd5b50565b6000813590506106f5816106cf565b92915050565b60006020828403121561071157610710610698565b5b600061071f848285016106e6565b91505092915050565b6000819050919050565b61073b81610728565b82525050565b60006020820190506107566000830184610732565b92915050565b61076581610728565b811461077057600080fd5b50565b6000813590506107828161075c565b92915050565b60006020828403121561079e5761079d610698565b5b60006107ac84828501610773565b91505092915050565b6107be816106bd565b82525050565b60006020820190506107d960008301846107b5565b92915050565b6000819050919050565b60006108046107ff6107fa8461069d565b6107df565b61069d565b9050919050565b6000610816826107e9565b9050919050565b60006108288261080b565b9050919050565b6108388161081d565b82525050565b6000602082019050610853600083018461082f565b92915050565b600082825260208201905092915050565b7f446f6e27742073656e6420656e6f756768204554480000000000000000000000600082015250565b60006108a0601583610859565b91506108ab8261086a565b602082019050919050565b600060208201905081810360008301526108cf81610893565b9050919050565b7f4f6e6c79206f776e65722063616e206163636573730000000000000000000000600082015250565b600061090c601583610859565b9150610917826108d6565b602082019050919050565b6000602082019050818103600083015261093b816108ff565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ab82610728565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109de576109dd610971565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a33600083610a18565b9150610a3e82610a23565b600082019050919050565b6000610a5482610a26565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610a94600b83610859565b9150610a9f82610a5e565b602082019050919050565b60006020820190508181036000830152610ac381610a87565b9050919050565b6000610ad582610728565b9150610ae083610728565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b1957610b18610971565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b5e82610728565b9150610b6983610728565b925082610b7957610b78610b24565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ba381610b84565b8114610bae57600080fd5b50565b600081519050610bc081610b9a565b92915050565b6000819050919050565b610bd981610bc6565b8114610be457600080fd5b50565b600081519050610bf681610bd0565b92915050565b600081519050610c0b8161075c565b92915050565b600080600080600060a08688031215610c2d57610c2c610698565b5b6000610c3b88828901610bb1565b9550506020610c4c88828901610be7565b9450506040610c5d88828901610bfc565b9350506060610c6e88828901610bfc565b9250506080610c7f88828901610bb1565b9150509295509295909350565b6000610c9782610bc6565b9150610ca283610bc6565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ce157610ce0610971565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d1e57610d1d610971565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d5b57610d5a610971565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d9857610d97610971565b5b82820290509291505056fea26469706673582212201fe6fda0da725eaf26e93a627978d7508515c97bdbd9a922e2038be43fbf149f64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 54,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "Funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "max",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmount",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 69,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}